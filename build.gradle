apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'

group = 'com.knowsis.stanfordthrift'

description = """stanford-corenlp-wrapper"""

sourceCompatibility = 1.5
targetCompatibility = 1.5

repositories {
    //maven { url "http://repo.maven.apache.org/maven2" }
    mavenCentral()
}

def thrift = [
    config: 'corenlp.thrift',
    pythonOut: 'build/thrift/py/knowsis'
]

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    def version = new File('version')
    version.write(stdout.toString().trim())
    return stdout.toString().trim()
}

version = getVersionName()

dependencies {
    compile group: 'log4j', name: 'log4j', version:'1.2.17'
    compile group: 'org.apache.thrift', name: 'libthrift', version:'0.9.2'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.7'
    compile group: 'org.slf4j', name: 'slf4j-simple', version:'1.7.7'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version:'3.4.1'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version:'3.4.1', classifier:'models'
    testCompile group: 'junit', name: 'junit', version:'3.8.1'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'lib'
        }
    }
}

clean {
    delete 'src/CoreNLP'
    delete 'build'
}

task dirs << {
    new File(thrift.pythonOut).mkdirs()
    new File('src/CoreNLP').mkdirs()
}

task genThriftPython (type: Exec, dependsOn: 'dirs') {
    commandLine 'thrift', '-v', '--gen', 'py:utf8strings,slots,new_style', '-out', thrift.pythonOut, thrift.config
}

task genThriftJava (type: Exec) {
    commandLine 'thrift', '-v', '--gen', 'java', '-out', 'src', thrift.config
}

compileJava {
    dependsOn 'genThriftJava', 'genThriftPython'
}

task uberJar(type: Jar, dependsOn: [':compileJava', ':processResources']) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    manifest {
        attributes 'Main-Class': 'org.ets.research.nlp.stanford_thrift.StanfordCoreNLPServer'
    }
}

task publishPython(dependsOn: 'genThriftPython') << {
    copy {
        from 'setup.py'
        from 'MANIFEST.in'
        from 'version'
        into 'build/thrift/py'
    }
    exec {
        executable = 'python'
        workingDir = 'build/thrift/py'
        args = ['setup.py', 'sdist']
    }
}

defaultTasks 'clean', 'uberJar', 'publishPython'
